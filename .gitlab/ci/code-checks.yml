variables:
  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

lint:
  stage: code-checks
  image: python:3.11
  before_script:
    - python -m pip install --upgrade pre-commit
  script:
    - pre-commit run --all-files

type-check:
  stage: code-checks
  image: python:3.11
  before_script:
    - python -m pip install --upgrade pipenv
    - pipenv install --dev
  script:
    - pipenv run mypy failed_imports/

check-migrations:
  stage: code-checks
  image: python:3.11
  variables:
    POSTGRES_DB: project
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: pass
    POSTGRES_HOST_AUTH_METHOD: trust
  services:
    - name: postgres:latest
  before_script:
    - python -m pip install --upgrade pipenv
    - pipenv install --dev
  script: 
    - pipenv run python manage.py makemigrations --dry-run --check

docker-build:
  stage: code-checks
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker build . --file Dockerfile --tag inecuria:$CI_COMMIT_SHORT_SHA

test:
  stage: code-checks
  image: python:3.11
  variables:
    DATABASE_URL: postgres://postgres:pass@postgres:5432/project
    POSTGRES_DB: project
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: pass
    POSTGRES_HOST_AUTH_METHOD: trust
  services:
    - name: postgres:latest
  before_script:
    - python -m pip install --upgrade pipenv
    - pipenv install --dev
  script:
    - pipenv run pytest

helmfile-lint-qa:
  stage: code-checks
  image: 827570723211.dkr.ecr.eu-west-1.amazonaws.com/tdi/k8s-deployer:latest
  before_script:
    - helmfile init --force
  script:
    - helmfile lint --environment qa

helmfile-lint-prod:
  stage: code-checks
  image: 827570723211.dkr.ecr.eu-west-1.amazonaws.com/tdi/k8s-deployer:latest
  before_script:
    - helmfile init --force
  script:
    - helmfile lint --environment production
