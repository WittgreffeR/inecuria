docker-build-and-push:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    AWS_ACCESS_KEY: $AWS_ACCESS_KEY
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    ECR_ROOT: 827570723211.dkr.ecr.eu-west-1.amazonaws.com
    IMAGE_TAG: $ECR_ROOT/tdi/inecuria:$CI_COMMIT_SHORT_SHA
    GLIBC_VERSION: 2.35-r0
  before_script:
    # dependencies
    - |
      apk --no-cache add binutils curl unzip \
      && curl -sL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub \
      && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-$GLIBC_VERSION.apk \
      && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-bin-$GLIBC_VERSION.apk \
      && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-i18n-$GLIBC_VERSION.apk \
      && apk add --no-cache \
          glibc-$GLIBC_VERSION.apk \
          glibc-bin-$GLIBC_VERSION.apk \
          glibc-i18n-$GLIBC_VERSION.apk \
      && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \
      && ln -sf /usr/glibc-compat/lib/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2

    # install AWS CLI
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - aws --version

    # configure AWS CLI
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set default.region $AWS_DEFAULT_REGION

    # docker login
    - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin $ECR_ROOT
  script:
    - docker build . --file Dockerfile --tag $IMAGE_TAG
    - docker push $IMAGE_TAG
